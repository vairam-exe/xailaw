name: Gemini PR Review
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - labelled
      - unlabelled

jobs:
  gemini-review:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write  # Allow posting comments on pull requests
      contents: read        # Allow reading the repository contents
    steps:
      # Debug step to log event type and action
      - name: Debug Event Type
        run: |
          echo "Event type: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"

      # Check if PR has assignees and comment if none exist
      - name: Check Assignees
        if: ${{ github.event.pull_request.assignees.length == 0 }}
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context['repo'].owner,
              repo: context['repo'].repo,
              issue_number: context.issue.number,
              body: "Please assign assignees as it is a standard practice."
            })

      # Checkout the repository code (only if assignees exist)
      - name: Checkout code
        if: ${{ github.event.pull_request.assignees.length > 0 }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up Python environment (only if assignees exist)
      - name: Set up Python
        if: ${{ github.event.pull_request.assignees.length > 0 }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Get the diff of changed files between base and head (only if assignees exist)
      - name: Get PR Diff
        if: ${{ github.event.pull_request.assignees.length > 0 }}
        id: get-diff
        run: |
          mkdir -p diffs
          FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          for file in $FILES; do
            safe_filename=$(echo "$file" | sed 's/\//_/g')
            git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} -- "$file" > "diffs/${safe_filename}.diff"
          done

      # Install Python dependencies (only if assignees exist)
      - name: Install dependencies
        if: ${{ github.event.pull_request.assignees.length > 0 }}
        run: |
          python -m pip install google-generativeai

      # Run the Gemini review script (only if assignees exist)
      - name: Run Gemini Review Script
        if: ${{ github.event.pull_request.assignees.length > 0 }}
        id: gemini-review
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          python gemini_review.py

      # Post the review as a comment (only if assignees exist)
      - name: Post Gemini Review
        if: ${{ github.event.pull_request.assignees.length > 0 }}
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const review = fs.readFileSync('review.md', 'utf8');
            await github.rest.issues.createComment({
              owner: context['repo'].owner,
              repo: context['repo'].repo,
              issue_number: context.issue.number,
              body: review
            });
