name: Gemini PR Review

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  gemini-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Get PR Diff
        id: get-diff
        run: |
          DIFF=$(git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          DIFF_ESCAPED=$(echo "$DIFF" | sed 's/\\/\\\\/g; s/"/\\"/g; s/$/\\n/' | tr -d '\n')
          echo "diff=$DIFF_ESCAPED" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: |
          python -m pip install google-generativeai

      - name: Run Gemini Review
        id: gemini-review
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          echo "${{ steps.get-diff.outputs.diff }}" > diff.txt
          python -c "
import google.generativeai as genai
import os

genai.configure(api_key=os.environ['GEMINI_API_KEY'])
model = genai.GenerativeModel('gemini-pro')

with open('diff.txt') as f:
    diff = f.read()

response = model.generate_content(
    f'''Analyze this code diff as a senior developer. Focus on:
1. Potential bugs and errors
2. Security vulnerabilities
3. Code quality improvements
4. Best practices violations

Format response in markdown with clear sections. Be concise but thorough.

Code diff:
{diff}'''
)

print(response.text)
" > review.md

      - name: Post Gemini Review
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const review = fs.readFileSync('review.md', 'utf8');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '## ðŸ¤– Gemini Code Review\n\n' + review
            });
